version: '2.1'
services:
  rabbitmq:
    image: 'rabbitmq:3.8.22-management-alpine'
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - 'rabbitmqdata:/var/lib/rabbitmq'
    environment:
      - 'RABBITMQ_DEFAULT_USER=${PROJECT_RABBITMQ_USER}'
      - 'RABBITMQ_DEFAULT_PASS=${PROJECT_RABBITMQ_PASS}'
      - 'RABBITMQ_DEFAULT_VHOST=${PROJECT_RABBITMQ_VHOST}'
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=1024MB
    networks:
      magento:
        aliases:
          - rabbitmq.magento2.docker
  db:
    hostname: db.magento2.docker
    image: 'mariadb:10.4'
    environment:
      - 'MYSQL_ROOT_PASSWORD=${PROJECT_DB_ROOT_PASS}'
      - 'MYSQL_DATABASE=${PROJECT_DB_NAME}'
      - 'MYSQL_USER=${PROJECT_DB_USER}'
      - 'MYSQL_PASSWORD=${PROJECT_DB_PASS}'
    ports:
      - 3306
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
      - 'mymagento-magento-db:/var/lib/mysql'
      - './mysql-dump:/docker-entrypoint-initdb.d'
      - './mysql-conf/my.cnf:/etc/mysql/my.cnf:ro'
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - db.magento2.docker
  phpmyadmin:
    image: phpmyadmin
    hostname: db-phpmyadmin.magento2.docker
    restart: always
    ports:
      - '8080:80'
    environment:
      - PMA_ARBITRARY=1
      - 'PMA_HOST=${COMPOSE_PROJECT_NAME}_db_1'
    networks:
      magento:
        aliases:
          - db-phpmyadmin.magento2.docker
  redis:
    hostname: redis.magento2.docker
    image: 'redis:5.0'
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    ports:
      - '6379:6379'
    healthcheck:
      test: redis-cli ping || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - redis.magento2.docker
  elasticsearch:
    restart: always
    hostname: elasticsearch.magento2.docker
    image: 'magento/magento-cloud-docker-elasticsearch:6.5-1.3.0'
    networks:
      magento:
        aliases:
          - elasticsearch.magento2.docker
  fpm:
    hostname: fpm.magento2.docker
    build: .docker/PHP/
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      magento:
        aliases:
          - fpm.magento2.docker
    depends_on:
      db:
        condition: service_healthy
  web:
    hostname: web.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:1.19-1.3.0'
    extends: generic
    ports:
      - '80:80'
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
      - './nginx-conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf'
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
      - WITH_XDEBUG=1
    networks:
      magento:
        aliases:
          - web.magento2.docker
    depends_on:
      fpm:
        condition: service_started
    healthcheck:
      test: nginx -T
      interval: 30s
      timeout: 30s
      retries: 3
  generic:
    hostname: generic.magento2.docker
    image: 'alpine:latest'
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl
  build:
    hostname: build.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.3.0'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      magento-build:
        aliases:
          - build.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli opcache pdo_mysql redis soap sockets sysvmsg sysvsem sysvshm xsl zip pcntl
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      - "PHPIZE_DEPS=autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkg-config \t\tre2c"
      - PHP_INI_DIR=/usr/local/etc/php
      - PHP_EXTRA_CONFIGURE_ARGS=--enable-embed
      - PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
      - PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
      - 'PHP_LDFLAGS=-Wl,-O1 -pie'
      - PHP_VERSION=7.4.14
      - GPG_KEYS=42670A7FE4D0441C8E4632349E4FDC074A4EF02D 5A52880781F755608BF815FC910DEB46F53EA312
      - 'PHP_URL=https://www.php.net/distributions/php-7.4.14.tar.xz'
      - 'PHP_ASC_URL=https://www.php.net/distributions/php-7.4.14.tar.xz.asc'
      - PHP_SHA256=f9f3c37969fcd9006c1dbb1dd76ab53f28c698a1646fa2dde8547c3f45e02886
      - COMPOSER_MEMORY_LIMIT=-1
      - PHP_MEMORY_LIMIT=2G
      - MAGENTO_ROOT=/app
      - DEBUG=false
      - MAGENTO_RUN_MODE=production
      - UPDATE_UID_GID=false
      - COMPOSER_ALLOW_SUPERUSER=1
      - ENABLE_SENDMAIL=true
  deploy:
    hostname: deploy.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.3.0'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      magento:
        aliases:
          - deploy.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
  fpm_xdebug:
    hostname: fpm_xdebug.magento2.docker
    env_file: ./.docker/config.env
    image: 'magento/magento-cloud-docker-php:7.4-fpm-1.3.0'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app'
    ports:
      - "9000:9000"
    environment:
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip redis xsl sodium xdebug
      - SET_DOCKER_HOST=true
      - XDEBUG_ENABLED=1
      - XDEBUG_CONFIG=client_host=host.docker.internal remote_autostart=On remote_enable=On idekey=BE-XDEBUG remote_log=/tmp/xdebug.log remote_port=9001 start_with_request=yes
      - PHP_IDE_CONFIG=serverName=magento_cloud_docker
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks: 
      magento:
        aliases:
          - fpm_xdebug.magento2.docker
    depends_on:
      db:
        condition: service_started
  mailhog:
    hostname: mailhog.magento2.docker
    image: 'mailhog/mailhog:latest'
    restart: always
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      magento:
        aliases:
          - mailhog.magento2.docker
volumes:
  rabbitmqdata: {}
  mymagento-magento-sync:
    driver: local
    driver_opts:
      type: none
      device: '${PWD}/'
      o: bind
  mymagento-magento-db: {}
networks:
  magento:
    driver: bridge
  magento-build:
    driver: bridge

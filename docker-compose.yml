version: '2.1'
services:

  #replace dbSO / mariadbSO / webSO  from the traefik labels and the service names to what project is being used at
  #example for project that has innitials CH: dbSO => dbCH / mariadbSO => mariadbCH / webSO => webCH
  
  ####
  # Database docker service
  ####
  dbSO:
    hostname: db.magento2.docker
    image: 'mariadb:10.4'
    environment:
      - 'MYSQL_ROOT_PASSWORD=${PROJECT_DB_ROOT_PASS}'
      - 'MYSQL_DATABASE=${PROJECT_DB_NAME}'
      - 'MYSQL_USER=${PROJECT_DB_USER}'
      - 'MYSQL_PASSWORD=${PROJECT_DB_PASS}'
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.tcp.routers.mariadbSO.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mariadbSO.entrypoints=mariadb"
      - "traefik.tcp.services.mariadbSO.loadbalancer.server.port=3306"
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
      - 'mymagento-magento-db:/var/lib/mysql'
      - './mysql-dump:/docker-entrypoint-initdb.d'
      - './mysql-conf/my.cnf:/etc/mysql/my.cnf:ro'
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - web
      - magento

  ####
  # Php fpm docker service
  ####
  fpm:
    hostname: fpm.magento2.docker
    build: .docker/PHP/
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      - web
      - magento
    depends_on:
      dbSO:
        condition: service_healthy
    links:
      - dbSO

  ####
  # Nginx docker service
  ####
  webSO:
    hostname: web.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:1.19-1.3.0'
    extends: generic
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.webSO.entrypoints=web"
      - "traefik.http.routers.webSO.rule=Host(`${COMPOSE_PROJECT_NAME}.local`)"
      - "traefik.http.routers.webSO.service=webSO"
      - "traefik.http.services.webSO.loadbalancer.server.port=80"
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
      - './nginx-conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf'
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
      - WITH_XDEBUG=1
    networks:
      - web
      - magento
    depends_on:
      fpm:
        condition: service_started
    healthcheck:
      test: nginx -T
      interval: 30s
      timeout: 30s
      retries: 3
    links:
      - fpm
      - fpm_xdebug
      - dbSO
  
  ####
  # Generic docker service
  ####
  generic:
    hostname: generic.magento2.docker
    image: 'alpine:latest'
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl

  ####
  # build docker service
  ####    
  build:
    hostname: build.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.3.0'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      - web
      - magento-build
    depends_on:
      dbSO:
        condition: service_healthy
    environment:
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli opcache pdo_mysql redis soap sockets sysvmsg sysvsem sysvshm xsl zip pcntl
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      - "PHPIZE_DEPS=autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkg-config \t\tre2c"
      - PHP_INI_DIR=/usr/local/etc/php
      - PHP_EXTRA_CONFIGURE_ARGS=--enable-embed
      - PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
      - PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
      - 'PHP_LDFLAGS=-Wl,-O1 -pie'
      - PHP_VERSION=7.4.14
      - GPG_KEYS=42670A7FE4D0441C8E4632349E4FDC074A4EF02D 5A52880781F755608BF815FC910DEB46F53EA312
      - 'PHP_URL=https://www.php.net/distributions/php-7.4.14.tar.xz'
      - 'PHP_ASC_URL=https://www.php.net/distributions/php-7.4.14.tar.xz.asc'
      - PHP_SHA256=f9f3c37969fcd9006c1dbb1dd76ab53f28c698a1646fa2dde8547c3f45e02886
      - COMPOSER_MEMORY_LIMIT=-1
      - PHP_MEMORY_LIMIT=2G
      - MAGENTO_ROOT=/app
      - DEBUG=false
      - MAGENTO_RUN_MODE=production
      - UPDATE_UID_GID=false
      - COMPOSER_ALLOW_SUPERUSER=1
      - ENABLE_SENDMAIL=true

  ####
  # Deploy docker service
  ####
  deploy:
    hostname: deploy.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.3.0'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      - web
      - magento
    depends_on:
      dbSO:
        condition: service_healthy
    links:
      - dbSO


  ####
  # Xdebug docker service
  ####
  fpm_xdebug:
    hostname: fpm_xdebug.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.4-fpm-1.3.0'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app'
    environment:
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip redis xsl sodium xdebug
      - XDEBUG_CONFIG=remote_host=host.docker.internal remote_autostart=On remote_enable=On idekey=BE-XDEBUG remote_log=/tmp/xdebug.log remote_port=9000
      - PHP_IDE_CONFIG=serverName=magento_cloud_docker
    networks:
      - web
      - magento
    depends_on:
      dbSO:
        condition: service_started
    links:
      - dbSO

volumes:
  mymagento-magento-sync:
    driver: local
    driver_opts:
      type: none
      device: '${PWD}/'
      o: bind
  mymagento-magento-db: {}


  
networks:
  web:
    external: true
  magento:
    driver: bridge
    external: false
  magento-build:
    driver: bridge
    external: false